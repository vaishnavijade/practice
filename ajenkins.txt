
pipeline {
    agent any
    tools {
        maven 'MAVEN_HOME'
    }
    stages {
        stage('git repo & clean') {
            steps {
                bat """
                if exist SmapleMavenJavaProject (
                    rmdir /s /q SmapleMavenJavaProject

                )
                git clone https://github.com/vaishnavijade/SmapleMavenJavaProject.git
                """
                bat "mvn clean -f SmapleMavenJavaProject"
            }
        }
        stage('install') {
            steps {
                bat "mvn install -f SmapleMavenJavaProject"
            }
        }
        stage('test') {
            steps {
                bat "mvn test -f SmapleMavenJavaProject"
            }
        }
        stage('package') {
            steps {
                bat "mvn package -f SmapleMavenJavaProject"
            }
        }
    }
}


paste this in tomcat users xml

<role rolename="admin-gui,manager-gui ,manager-script,manager-jmx,manager-status"/>
  <user username=“admin" password="1234"roles="manager-gui, admin-gui ,manager-script"/>


Check in the available and install the
plugins
Maven integration plugin,
Build pipeline plugin,
Pipeline utility,
Copy artifacts,
Deploy to container.
click on -> install without restart







aws pject deployemnt

cmd admin
cd navigateto ey pair path
ssh -i(ec2 connect)
sudo apt update
sudo apt-get install docker.io
sudo apt install git 
sudo apt install nano
create a html file 
<html>
  <head>  <title>Page Title</title></head>
  <body> <h1>Welcome to My Website</h1>  </body>
</html>
in gitbash open from html file
git init
git add README.md
git commit "first commit"
git branch - main
git remote add origin https://github.com/vaishnavijade/AwsExample.git(Create a repo)
git push-origin main
return to cmd
git clone url
ls
cd AwsExaple(filename got aboce)
ls
nano Dockerfile
FROM nginx:alpine
COPY . /usr/share/nginx/html
ctrl o ctrl x 
sudo docker build -t my-web-app .
sudo docker run -d -p 80:80 my-web-app
instance beside 
public ipv4

sudo docker ps 
sudo docker stop <container-id>




